version: 2
jobs:

  # Builds and tests
  build:
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.1-jessie-node-browsers
      - image: circleci/mysql:5.7-ram
        environment:
          MYSQL_ROOT_PASSWORD: rootpw
          MYSQL_DATABASE: homestead_testing
          MYSQL_USER: circleci
          MYSQL_PASSWORD: circleci

    environment:
      # These need to be set, even if not valid Twilio creds
      TWILIO_ACCOUNT_SID: supsupsup
      TWILIO_AUTH_TOKEN: yoyoyo
      TWILIO_FROM_NUMBER: +15555555555
      DB_DATABASE: homestead_testing
      DB_USERNAME: circleci
      DB_PASSWORD: circleci

    steps:
      - checkout

      - run: sudo apt update && sudo apt install zlib1g-dev mysql-client
      - run: sudo docker-php-ext-install zip pdo pdo_mysql mysqli mbstring tokenizer ctype json
      - run:
          # Our primary container isn't MYSQL so run a sleep command until it's ready.
          name: Waiting for MySQL to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z 127.0.0.1 3306 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for MySQL && exit 1

      # Download and cache dependencies

      # composer cache
      - restore_cache:
          keys:
          # "composer.lock" can be used if it is committed to the repo
          - v1-dependencies-{{ checksum "composer.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: composer install -n --prefer-dist

      - save_cache:
          key: composer-v1-{{ checksum "composer.lock" }}
          paths:
            - vendor

      # node cache

      - restore_cache:
          keys:
            - node-v3-{{ checksum "package.json" }}
            - node-v3-
      - run: yarn install
      - save_cache:
          key: node-v3-{{ checksum "package.json" }}
          paths:
            - node_modules
            - ~/.yarn

      # prepare the database
      - run: php artisan migrate --env=testing --database=mysql_testing --force

      # run tests with phpunit or codecept
      - run: ./vendor/bin/phpunit

  # Deploy job
  deploy:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - run:
          name: Deploy master to Heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_PROJECT_NAME.git

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master

